# Generated by Django 3.2.17 on 2023-02-25 14:42

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import server.apps.core.validators


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0002_normalize'),
    ]

    operations = [
        migrations.AlterField(
            model_name='catalogcategory',
            name='is_published',
            field=models.BooleanField(
                default=True,
                verbose_name='published',
            ),
        ),
        migrations.AlterField(
            model_name='catalogcategory',
            name='name',
            field=models.CharField(
                help_text='Maximum length 150',
                max_length=150,
                verbose_name='name',
            ),
        ),
        migrations.AlterField(
            model_name='catalogcategory',
            name='normalized_name',
            field=models.CharField(
                editable=False,
                max_length=150,
                null=True,
                unique=True,
                verbose_name='normalized name',
            ),
        ),
        migrations.AlterField(
            model_name='catalogcategory',
            name='weight',
            field=models.IntegerField(
                default=100,
                help_text='Weight must be greater than 0 and less than 32767',
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(32767),
                ],
                verbose_name='weight',
            ),
        ),
        migrations.AlterField(
            model_name='catalogitem',
            name='category',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to='catalog.catalogcategory',
                verbose_name='categories',
            ),
        ),
        migrations.AlterField(
            model_name='catalogitem',
            name='is_published',
            field=models.BooleanField(
                default=True,
                verbose_name='published',
            ),
        ),
        migrations.AlterField(
            model_name='catalogitem',
            name='name',
            field=models.CharField(
                help_text='Maximum length 150',
                max_length=150,
                verbose_name='name',
            ),
        ),
        migrations.AlterField(
            model_name='catalogitem',
            name='tags',
            field=models.ManyToManyField(
                to='catalog.CatalogTag',
                verbose_name='tags',
            ),
        ),
        migrations.AlterField(
            model_name='catalogitem',
            name='text',
            field=models.TextField(
                help_text=(
                    'The description should be more than 2x words and ' +
                    'contain the words "превосходно, роскошно"'
                ),
                validators=[
                    server.apps.core.validators.ContainsValidator,
                ],
                verbose_name='description',
            ),
        ),
        migrations.AlterField(
            model_name='catalogtag',
            name='is_published',
            field=models.BooleanField(
                default=True,
                verbose_name='published',
            ),
        ),
        migrations.AlterField(
            model_name='catalogtag',
            name='name',
            field=models.CharField(
                help_text='Maximum length 150',
                max_length=150,
                verbose_name='name',
            ),
        ),
        migrations.AlterField(
            model_name='catalogtag',
            name='normalized_name',
            field=models.CharField(
                editable=False,
                max_length=150,
                null=True,
                unique=True,
                verbose_name='normalized name',
            ),
        ),
    ]
