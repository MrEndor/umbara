name: test

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: test-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [3.11.1]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build sqlite
      run: |
          wget https://sqlite.org/2023/sqlite-autoconf-3410100.tar.gz
          tar -xvf sqlite-autoconf-3410100.tar.gz
          ./configure
          make
          sudo make install
          export PATH="/usr/local/lib:$PATH"
      working-directory: sqlite-autoconf-3380500

    - name: Install poetry
      env:  # Keep in sync with `POETRY_VERSION` in `Dockerfile`
        POETRY_VERSION: "1.3.2"
      run: |
        curl -sSL "https://install.python-poetry.org" | python -
        # Adding `poetry` to `$PATH`:
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        poetry install
        poetry run pip install -U pip
    - name: Run checks
      env:
        SECRET_DJANGO_SECRET_KEY: ${{ secrets.SECRET_DJANGO_SECRET_KEY }}
        LD_LIBRARY_PATH: /usr/local/lib
      run: |
        poetry run dump-env -t config/.env.template -p 'SECRET_' --strict SECRET_DJANGO_SECRET_KEY > config/.env
        poetry run flake8 .
        poetry run mypy manage.py server
        poetry run pytest
        poetry run poetry check
        poetry run pip check
        # TODO: remove once `py` / `pytest` package are updated
        poetry run safety check --full-report --ignore=51457
